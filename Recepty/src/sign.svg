<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="45.817974mm"
   height="29.858208mm"
   viewBox="0 0 45.817974 29.858208"
   version="1.1"
   id="svg1"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <sodipodi:namedview
     id="namedview1"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm">
    <inkscape:page
       x="8.680842e-16"
       y="0"
       width="45.81797"
       height="29.858208"
       id="page2"
       margin="0"
       bleed="0" />
  </sodipodi:namedview>
  <defs
     id="defs1">
    <meshgradient
       inkscape:collect="always"
       id="meshgradient9"
       gradientUnits="userSpaceOnUse"
       x="28.228907"
       y="147.73926">
      <meshrow
         id="meshrow9">
        <meshpatch
           id="meshpatch9">
          <stop
             path="c 9.70283,0  19.4057,0  29.1085,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop9" />
          <stop
             path="c 0,9.95274  0,19.9055  0,29.8582"
             style="stop-color:#000000;stop-opacity:1"
             id="stop10" />
          <stop
             path="c -9.70283,0  -19.4057,0  -29.1085,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop11" />
          <stop
             path="c 0,-9.95274  0,-19.9055  0,-29.8582"
             style="stop-color:#000000;stop-opacity:1"
             id="stop12" />
        </meshpatch>
      </meshrow>
    </meshgradient>
    <meshgradient
       inkscape:collect="always"
       id="meshgradient12"
       gradientUnits="userSpaceOnUse"
       x="58.689453"
       y="154.2793">
      <meshrow
         id="meshrow12">
        <meshpatch
           id="meshpatch12">
          <stop
             path="c 5.11914,0  10.2383,0  15.3574,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop13" />
          <stop
             path="c 0,4.13086  0,8.26171  0,12.3926"
             style="stop-color:#000000;stop-opacity:1"
             id="stop14" />
          <stop
             path="c -5.11914,0  -10.2383,0  -15.3574,0"
             style="stop-color:#ffffff;stop-opacity:1"
             id="stop15" />
          <stop
             path="c 0,-4.13086  0,-8.26171  0,-12.3926"
             style="stop-color:#000000;stop-opacity:1"
             id="stop16" />
        </meshpatch>
      </meshrow>
    </meshgradient>
  </defs>
  <g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"
     transform="translate(-48.870798,-141.86208)">
    <g
       id="g16"
       inkscape:export-filename="sign.svg"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96">
      <g
         id="path4"
         transform="translate(20.641893,-5.8772056)"
         style="stroke:url(#meshgradient9)">
        <path
           style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-variant-east-asian:normal;font-feature-settings:normal;font-variation-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;writing-mode:lr-tb;direction:ltr;text-orientation:mixed;dominant-baseline:auto;baseline-shift:baseline;text-anchor:start;white-space:normal;shape-padding:0;shape-margin:0;inline-size:0;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;vector-effect:none;fill:#ff0000;fill-opacity:0;fill-rule:nonzero;stroke:none;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate;stop-color:#000000;stop-opacity:1"
           d="m 35.549926,159.83133 c 5.394944,-4.23889 -0.477533,0.50411 3.153621,-2.72359 0.964909,-0.85769 2.030074,-1.59671 3.010279,-2.43689 1.751414,-1.50121 2.347412,-2.15273 4.0137,-3.44031 0.514262,-0.39739 1.069319,-0.74078 1.576811,-1.14677 0.687993,-0.5504 1.330002,-1.15612 2.006851,-1.72016 0.183536,-0.15295 0.573386,-0.66895 0.573386,-0.43004 0,0.27157 -1.394655,1.81952 -1.433465,1.8635 -1.207957,1.36902 -2.570871,2.60065 -3.727008,4.0137 -0.974365,1.19089 -1.809527,2.48923 -2.723583,3.72701 -2.842371,3.84905 -5.745422,7.66631 -8.457444,11.61107 -0.809085,1.17685 -2.876433,4.28693 -3.870354,5.8772 -0.29533,0.47253 -0.58689,0.9478 -0.860078,1.43347 -0.157144,0.27937 -0.303776,0.56546 -0.430041,0.86008 -0.01881,0.0439 -0.03379,0.17713 0,0.14334 1.45551,-1.45551 2.585517,-3.13723 3.870357,-4.73043 2.379186,-2.95019 5.108922,-5.59741 7.740708,-8.3141 0.729155,-0.75267 1.396304,-1.56564 2.150198,-2.29354 1.340286,-1.29407 3.065221,-2.54879 4.587086,-3.58366 0.860565,-0.58519 1.621645,-0.88722 1.576814,-0.57339 -0.05813,0.40691 -0.426085,0.71278 -0.716733,1.00343 -1.004562,1.00456 -2.149062,1.86236 -3.153624,2.86693 -1.346462,1.34646 -4.647623,5.22608 -5.73386,6.59393 -0.125563,0.15812 -1.224126,1.60871 -1.14677,2.1502 0.06671,0.467 0.873845,-0.01 1.863503,-0.71673 2.398098,-1.71293 4.454117,-3.88558 6.737286,-5.73386 0.453332,-0.36698 0.938864,-0.6943 1.433465,-1.00342 0.334129,-0.20884 1.322983,-0.63912 1.14677,-0.2867 -0.243641,0.48729 -0.651515,0.87423 -1.003424,1.29012 -1.614474,1.90801 -3.92144,4.14965 -5.017127,6.45059 -0.123259,0.25884 -0.275661,0.78132 0,0.86008 0.370409,0.10583 0.67138,-0.37807 1.003424,-0.57339 1.998644,-1.17567 3.747651,-2.66444 5.73386,-3.87035 0.14796,-0.0898 2.0173,-1.07249 2.293543,-1.00343 0.646544,0.16164 0.01286,1.5447 0,1.57682 -0.445063,1.11265 -0.975265,2.18965 -1.433465,3.29696 -0.310967,0.75151 -0.403804,1.14678 -0.143346,1.14678 0.490871,0 1.477778,-0.83896 1.72016,-1.00343 0.997907,-0.67715 1.976167,-1.38639 3.010275,-2.00685 0.641327,-0.3848 1.30656,-0.74082 2.006849,-1.00343 1.111956,-0.41698 -1.324295,3.58367 -0.860078,3.58367 0.250819,0 0.842819,-1.11801 0.860078,-1.14677"
           id="path6" />
        <path
           style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-variant-east-asian:normal;font-feature-settings:normal;font-variation-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;writing-mode:lr-tb;direction:ltr;text-orientation:mixed;dominant-baseline:auto;baseline-shift:baseline;text-anchor:start;white-space:normal;shape-padding:0;shape-margin:0;inline-size:0;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;vector-effect:none;fill:#6c3cbc;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate;stop-color:#000000;stop-opacity:1"
           d="m 49.767578,147.75781 c -0.07935,0.0346 -0.129639,0.0878 -0.193359,0.15039 -0.12744,0.12517 -0.276706,0.29439 -0.347657,0.35352 -0.681026,0.56752 -1.321535,1.17285 -2.003906,1.71875 -0.499163,0.39933 -1.054643,0.74152 -1.576172,1.14453 -1.671296,1.29145 -2.271217,1.94676 -4.019531,3.44531 -0.973353,0.83431 -2.03888,1.57472 -3.011719,2.43946 -0.454499,0.404 -0.75963,0.68182 -0.958984,0.87109 -0.09968,0.0946 -0.172307,0.16792 -0.224609,0.22266 -0.0523,0.0547 -0.08178,0.0853 -0.107422,0.1289 -0.0064,0.0109 -0.01357,0.0214 -0.01953,0.0449 -0.0015,0.006 -0.0031,0.0135 -0.0039,0.0215 -6e-5,5.7e-4 4.6e-5,0.001 0,0.002 -0.341394,0.2629 -0.738638,0.56669 -1.832031,1.42578 l 0.162109,0.20899 c 1.298046,-1.0199 1.892172,-1.47815 2.173828,-1.69336 0.02161,-0.0157 0.04192,-0.0296 0.0625,-0.0449 0.07346,-0.0546 0.119375,-0.0926 0.152344,-0.11915 0.01128,-0.008 0.01978,-0.0144 0.01563,-0.0117 0.002,-0.002 0.01,-0.006 0.01172,-0.008 0.0018,-0.001 0.0033,-0.002 0.0059,-0.004 0.0013,-0.001 0.0016,-0.004 0.0039,-0.006 0.0023,-0.002 0.01359,-0.0136 0.01367,-0.0137 5.9e-5,-8e-5 -0.01988,-0.0847 -0.0332,-0.14258 0.192138,-0.1786 0.395453,-0.36692 0.753907,-0.68555 0.956979,-0.85064 2.022709,-1.58949 3.009765,-2.43555 1.754515,-1.50386 2.346533,-2.15183 4.007813,-3.43554 0.506995,-0.39178 1.062304,-0.73579 1.578125,-1.14844 0.692171,-0.55374 1.334712,-1.15917 2.005859,-1.71875 -0.100913,0.13121 -0.197935,0.26024 -0.3125,0.39844 -0.35129,0.42375 -0.698416,0.80769 -0.728516,0.84179 -1.201338,1.36152 -2.565922,2.59425 -3.730468,4.01758 -0.980745,1.19869 -1.815893,2.49923 -2.726563,3.73242 -2.841629,3.84805 -5.746518,7.66699 -8.460937,11.61524 -0.811127,1.17982 -2.876515,4.28641 -3.873047,5.88086 -0.29572,0.47315 -0.588455,0.95087 -0.863281,1.43945 -0.158825,0.28236 -0.306889,0.57284 -0.435547,0.87305 -0.02348,0.0548 -0.02855,0.0965 -0.03125,0.14648 -0.0014,0.025 -0.0061,0.0427 0.01172,0.0918 0.0022,0.006 0.0036,0.0138 0.0078,0.0215 0.0042,0.008 0.01704,0.0248 0.01758,0.0254 5.34e-4,6.2e-4 0.03259,0.027 0.0332,0.0274 6.14e-4,3.8e-4 0.04813,0.0174 0.04883,0.0176 6.97e-4,1.2e-4 0.04805,1.4e-4 0.04883,0 7.83e-4,-1.5e-4 0.02717,-0.007 0.03711,-0.0117 0.01988,-0.01 0.03208,-0.0204 0.04102,-0.0293 1.46733,-1.46733 2.59883,-3.15294 3.878907,-4.74023 2.372421,-2.94181 5.09871,-5.58797 7.732422,-8.30664 0.734219,-0.7579 1.401896,-1.56827 2.148437,-2.28907 1.330223,-1.28435 3.049174,-2.53726 4.568359,-3.57031 0.424039,-0.28835 0.824724,-0.50644 1.09961,-0.60937 0.119645,-0.0448 0.19961,-0.0563 0.248047,-0.0586 -0.0662,0.32325 -0.367792,0.60803 -0.654297,0.89453 -0.995663,0.99566 -2.140836,1.85372 -3.154297,2.86719 -1.359858,1.35986 -4.652487,5.2308 -5.744141,6.60547 -0.06846,0.0862 -0.373412,0.48665 -0.658203,0.94336 -0.142395,0.22836 -0.278715,0.46925 -0.376953,0.69336 -0.09824,0.22411 -0.16538,0.42828 -0.138672,0.61523 0.0112,0.0784 0.04076,0.1523 0.0957,0.20703 0.05494,0.0547 0.130582,0.0827 0.203125,0.0898 0.145088,0.0143 0.296178,-0.0344 0.472657,-0.11328 0.352957,-0.15777 0.803565,-0.45743 1.300781,-0.8125 2.41205,-1.7229 4.468237,-3.89747 6.742187,-5.73829 0.447328,-0.36211 0.92987,-0.68664 1.421875,-0.99414 0.151953,-0.095 0.483095,-0.25482 0.736328,-0.33984 0.0729,-0.0245 0.105068,-0.0257 0.15625,-0.0352 -0.234454,0.42053 -0.586862,0.78572 -0.921875,1.18164 -1.607336,1.89958 -3.922818,4.14261 -5.035156,6.47852 -0.06739,0.14151 -0.140441,0.3425 -0.162109,0.53906 -0.01083,0.0983 -0.0095,0.19749 0.02344,0.29102 0.0329,0.0935 0.113496,0.18365 0.222657,0.21484 0.245516,0.0701 0.461184,-0.0585 0.634765,-0.19922 0.173582,-0.14069 0.330777,-0.30636 0.470703,-0.38867 2.011641,-1.18331 3.761958,-2.67237 5.736328,-3.87109 0.02285,-0.0139 0.173737,-0.0961 0.373047,-0.19922 0.19931,-0.10313 0.454425,-0.23215 0.712891,-0.35547 0.258466,-0.12331 0.521579,-0.2406 0.732422,-0.32227 0.105421,-0.0408 0.197733,-0.0735 0.267578,-0.0918 0.06985,-0.0183 0.125729,-0.015 0.107422,-0.0195 0.113637,0.0284 0.15088,0.0874 0.175781,0.20898 0.0249,0.12159 0.01021,0.29724 -0.02734,0.47266 -0.03756,0.17542 -0.09489,0.35161 -0.144531,0.48437 -0.02482,0.0664 -0.04769,0.12218 -0.06445,0.16211 -0.01676,0.0399 -0.02085,0.0463 -0.03125,0.0723 -0.44254,1.10634 -0.973195,2.1823 -1.433594,3.29492 -0.156838,0.37903 -0.259585,0.66876 -0.292969,0.88672 -0.01669,0.10898 -0.02137,0.20229 0.02148,0.29297 0.04286,0.0907 0.153378,0.15039 0.251953,0.15039 0.320803,0 0.68282,-0.22842 1.027344,-0.46289 0.344524,-0.23448 0.661884,-0.49406 0.765625,-0.56446 1.000181,-0.67869 1.978327,-1.38543 3.005859,-2.00195 0.637588,-0.38256 1.295102,-0.73566 1.984375,-0.99414 0.05694,-0.0214 0.09368,-0.0229 0.103516,-0.0215 0.0055,0.009 0.02017,0.10962 -0.0098,0.25585 -0.05987,0.29247 -0.244107,0.75269 -0.449219,1.22461 -0.205111,0.47193 -0.431773,0.95897 -0.580078,1.33399 -0.07415,0.18751 -0.128875,0.34536 -0.152344,0.47265 -0.01173,0.0636 -0.01979,0.11986 -0.002,0.18555 0.0089,0.0328 0.02767,0.0705 0.0625,0.0996 0.03483,0.0291 0.08283,0.043 0.121094,0.043 0.08049,0 0.135723,-0.0368 0.1875,-0.0762 0.05178,-0.0394 0.101171,-0.0876 0.150391,-0.14453 0.09844,-0.11382 0.198384,-0.25982 0.291015,-0.4043 0.09263,-0.14448 0.177624,-0.28823 0.240235,-0.39844 0.03131,-0.0551 0.05569,-0.10108 0.07422,-0.13476 0.01853,-0.0337 0.03858,-0.0682 0.0293,-0.0527 l -0.226562,-0.13672 c -0.0136,0.0227 -0.01507,0.0295 -0.0332,0.0625 -0.01813,0.033 -0.04368,0.0771 -0.07422,0.13086 -0.06108,0.10752 -0.143544,0.2481 -0.232422,0.38672 -0.08888,0.13862 -0.185888,0.27634 -0.269531,0.37305 -0.01168,0.0135 -0.02016,0.0175 -0.03125,0.0293 0.02372,-0.0907 0.05421,-0.19347 0.111328,-0.3379 0.143182,-0.36206 0.369242,-0.85005 0.576172,-1.32617 0.20693,-0.47611 0.395163,-0.93696 0.464844,-1.27734 0.03484,-0.17019 0.0544,-0.31382 -0.02148,-0.44336 -0.03794,-0.0648 -0.112589,-0.11561 -0.189453,-0.12695 -0.07686,-0.0113 -0.152315,0.006 -0.234375,0.0371 -0.711305,0.26674 -1.382278,0.62662 -2.027344,1.01367 -1.040684,0.6244 -2.021945,1.33416 -3.017578,2.00976 -0.138641,0.0941 -0.433382,0.33834 -0.765625,0.56446 -0.332243,0.22612 -0.708838,0.41601 -0.878906,0.41601 -0.03165,0 -0.0084,0.0108 -0.01172,0.004 -0.0033,-0.007 -0.01283,-0.0588 0,-0.14258 0.02566,-0.16755 0.123215,-0.45174 0.277344,-0.82422 0.456002,-1.102 0.986008,-2.17987 1.433594,-3.29883 -0.0072,0.0179 0.01146,-0.0259 0.0293,-0.0684 0.01783,-0.0425 0.04206,-0.10155 0.06836,-0.17187 0.05259,-0.14065 0.114596,-0.32692 0.15625,-0.52149 0.04165,-0.19456 0.06506,-0.39588 0.02734,-0.58007 -0.03772,-0.1842 -0.163413,-0.3597 -0.373047,-0.41211 -0.08737,-0.0218 -0.150491,-0.003 -0.236328,0.0195 -0.08584,0.0225 -0.185888,0.0566 -0.296875,0.0996 -0.221975,0.086 -0.488106,0.20708 -0.75,0.33203 -0.261894,0.12495 -0.519266,0.25515 -0.720703,0.35937 -0.201438,0.10423 -0.337545,0.17601 -0.388672,0.20704 -1.998048,1.21309 -3.746775,2.70306 -5.732422,3.87109 -0.192118,0.11301 -0.351389,0.28653 -0.503906,0.41016 -0.152518,0.12362 -0.271592,0.18412 -0.396485,0.14843 -0.02867,-0.008 -0.03272,-0.0122 -0.04492,-0.0469 -0.0122,-0.0347 -0.01798,-0.0993 -0.0098,-0.17383 0.01643,-0.14907 0.08085,-0.33775 0.136718,-0.45508 1.079037,-2.26597 3.378389,-4.50543 5,-6.42187 0.345487,-0.4083 0.762007,-0.80135 1.019532,-1.31641 0.03069,-0.0614 0.0555,-0.13546 0.01563,-0.21484 -0.03988,-0.0794 -0.121122,-0.10461 -0.179688,-0.10938 -0.117131,-0.01 -0.236617,0.0251 -0.376953,0.0723 -0.280672,0.0942 -0.610792,0.25332 -0.792969,0.36718 -0.497196,0.31075 -0.987929,0.64184 -1.447265,1.01368 -2.292388,1.85574 -4.346323,4.02555 -6.730469,5.72851 -0.492442,0.35166 -0.941157,0.64449 -1.255859,0.78516 -0.157352,0.0703 -0.281952,0.0973 -0.337891,0.0918 -0.02797,-0.003 -0.03519,-0.008 -0.04102,-0.0137 -0.0058,-0.006 -0.01601,-0.0183 -0.02148,-0.0566 -0.01197,-0.0838 0.02923,-0.26559 0.119141,-0.4707 0.08991,-0.20511 0.221103,-0.43841 0.359375,-0.66016 0.276542,-0.44348 0.583517,-0.848 0.640625,-0.91992 1.08082,-1.36103 4.391543,-5.24897 5.724609,-6.58203 0.995663,-0.99567 2.140836,-1.85373 3.154297,-2.86719 0.283987,-0.28399 0.686036,-0.60303 0.753906,-1.07812 0.0091,-0.0637 -0.0041,-0.1402 -0.05273,-0.19531 -0.04862,-0.0551 -0.114221,-0.075 -0.173828,-0.0801 -0.119216,-0.0101 -0.245597,0.0241 -0.400391,0.082 -0.309588,0.11592 -0.719723,0.34183 -1.15625,0.63867 -1.524544,1.03669 -3.253167,2.29387 -4.603516,3.59766 -0.761247,0.735 -1.430206,1.54943 -2.154297,2.29687 -2.62986,2.7147 -5.362096,5.36564 -7.748046,8.32422 -1.10437,1.36942 -2.139625,2.75277 -3.306641,4.04102 0.02986,-0.0552 0.05318,-0.11321 0.08398,-0.16797 0.27155,-0.48276 0.562482,-0.95583 0.857422,-1.42774 0.99131,-1.58609 3.060145,-4.69721 3.867188,-5.87109 2.709625,-3.94127 5.611966,-7.75737 8.455078,-11.60742 0.917442,-1.24237 1.750765,-2.53957 2.71875,-3.72266 1.147727,-1.40277 2.510034,-2.63324 3.724609,-4.00976 0.0087,-0.01 0.378636,-0.4205 0.734375,-0.84961 0.17787,-0.21456 0.353559,-0.43629 0.488281,-0.625 0.06736,-0.0944 0.123822,-0.18033 0.166016,-0.25586 0.04219,-0.0755 0.07813,-0.13014 0.07813,-0.22071 0,-0.0479 -0.0058,-0.11257 -0.07031,-0.16211 -0.06454,-0.0495 -0.140014,-0.0309 -0.179688,-0.0137 z"
           id="path7" />
      </g>
      <g
         id="path5"
         transform="translate(20.641893,-5.8772056)"
         style="stroke:url(#meshgradient12)">
        <path
           style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-variant-east-asian:normal;font-feature-settings:normal;font-variation-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;writing-mode:lr-tb;direction:ltr;text-orientation:mixed;dominant-baseline:auto;baseline-shift:baseline;text-anchor:start;white-space:normal;shape-padding:0;shape-margin:0;inline-size:0;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;vector-effect:none;fill:#ff0000;fill-opacity:0;fill-rule:nonzero;stroke:none;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate;stop-color:#000000;stop-opacity:1"
           d="m 58.772055,166.56861 c 2.421515,-1.91145 4.610553,-4.09966 7.023979,-6.02055 2.669365,-2.1246 5.452708,-4.10194 8.170748,-6.1639"
           id="path8" />
        <path
           style="color:#000000;font-style:normal;font-variant:normal;font-weight:normal;font-stretch:normal;font-size:medium;line-height:normal;font-family:sans-serif;font-variant-ligatures:normal;font-variant-position:normal;font-variant-caps:normal;font-variant-numeric:normal;font-variant-alternates:normal;font-variant-east-asian:normal;font-feature-settings:normal;font-variation-settings:normal;text-indent:0;text-align:start;text-decoration-line:none;text-decoration-style:solid;text-decoration-color:#000000;letter-spacing:normal;word-spacing:normal;text-transform:none;writing-mode:lr-tb;direction:ltr;text-orientation:mixed;dominant-baseline:auto;baseline-shift:baseline;text-anchor:start;white-space:normal;shape-padding:0;shape-margin:0;inline-size:0;clip-rule:nonzero;display:inline;overflow:visible;visibility:visible;isolation:auto;mix-blend-mode:normal;color-interpolation:sRGB;color-interpolation-filters:linearRGB;solid-color:#000000;solid-opacity:1;vector-effect:none;fill:#6c3cbc;fill-opacity:1;fill-rule:nonzero;stroke:none;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1;-inkscape-stroke:none;color-rendering:auto;image-rendering:auto;shape-rendering:auto;text-rendering:auto;enable-background:accumulate;stop-color:#000000;stop-opacity:1"
           d="m 73.886719,154.2793 c -2.715839,2.06029 -5.500697,4.03841 -8.173828,6.16601 -2.421232,1.9271 -4.61003,4.11448 -7.023438,6.01953 l 0.164063,0.20703 c 2.429621,-1.91784 4.619769,-4.10485 7.02539,-6.01953 2.665599,-2.1216 5.447728,-4.09848 8.167969,-6.16211 z"
           id="path9" />
      </g>
    </g>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
